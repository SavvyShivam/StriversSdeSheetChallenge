/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.
     if(head==NULL||head->next==NULL)
    {

        return head;

    }
     // Write your code here.

    Node *curr = head;

    Node *buff = head;

    int l=0;

    // l is the length 

    while(curr->next!=NULL)

    {

        curr=curr->next;

        l++;

    }

    // new head created

    curr->next=head;

    // now to create or form the endpoint according to question

    int rl=l+1;

    while(l<k)

    {

        l=l+rl;

    }

    // curr reaches new null and buff reaches new head

    for(int i=0;i<l+1-k;i++)
    {

        curr=curr->next;

        buff=buff->next;
    }

    curr->next=NULL;

    return buff;
}
